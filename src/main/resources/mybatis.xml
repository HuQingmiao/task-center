<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE configuration PUBLIC "-//mybatis.org//DTD Config 3.0//EN" "http://mybatis.org/dtd/mybatis-3-config.dtd">

<configuration>

    <settings>
        <!-- 该配置影响的所有映射器中配置的缓存的全局开关。 默认为true. -->
        <setting name="cacheEnabled" value="true"/>

        <!-- 延迟加载的全局开关. 当开启时,所有关联对象都会延迟加载. 特定关联关系中可通过设置fetchType属性来覆盖该项的开关状态. 默认为false.  -->
        <setting name="lazyLoadingEnabled" value="false"/>

        <!-- 当启用时，带有延迟加载属性的对象的加载与否完全取决于对任意延迟属性的调用；反之，每种属性将会按需加载。默认为true.  -->
        <setting name="aggressiveLazyLoading" value="true"/>

        <!-- 是否允许单一语句返回多结果集(需要兼容驱动). 默认为true.  -->
        <setting name="multipleResultSetsEnabled" value="true"/>

        <!-- 使用列标签代替列名.  默认为true. -->
        <setting name="useColumnLabel" value="true"/>

        <!-- 允许JDBC 生成主键, 需要驱动器支持.  如果设为了true,这个设置将强制使用被生成的主键,有一些驱动器不兼容不过仍然可以执行.默认为false.  -->
        <setting name="useGeneratedKeys" value="false"/>

        <!-- 指定MyBatis 是否并且如何来自动映射数据表字段与对象的属性.PARTIAL将只自动映射简单的,没有嵌套的结果.FULL将自动映射所有复杂的结果.默认为PARTIAL. -->
        <setting name="autoMappingBehavior" value="PARTIAL"/>

        <!-- 配置默认的执行器. SIMPLE 就是普通的执行器; REUSE 执行器会重用预处理语句(prepared statements); BATCH 执行器将重用语句并执行批量更新. 默认为SIMPLE.-->
        <setting name="defaultExecutorType" value="SIMPLE"/>

        <!-- 设置超时时间,它决定驱动等待数据库响应的秒数. 默认为Not Set. -->
        <setting name="defaultStatementTimeout" value="25"/>

        <!-- 允许在嵌套语句中使用行分界(RowBounds). 默认为false. -->
        <setting name="safeRowBoundsEnabled" value="false"/>

        <!-- 是否开启自动驼峰命名规则(camel case)映射,即从经典数据库列名 A_COLUMN 到经典 Java 属性名 aColumn 的类似映射.默认为false.-->
        <setting name="mapUnderscoreToCamelCase" value="true"/>

        <!-- myBatis 利用本地缓存机制(Local Cache)防止循环引用(circular references)和加速重复嵌套查询.
                           若设置值为 STATEMENT,本地会话仅用在语句执行上,对相同 SqlSession的不同调用将不会共享数据.
                           默认值为 SESSION,这种情况下会缓存一个会话中执行的所有查询. -->
        <setting name="localCacheScope" value="SESSION"/>

        <!-- 当没有为参数提供特定的 JDBC 类型时,为空值指定 JDBC 类型. 某些驱动需要指定列的 JDBC 类型,多数情况直接用一般类型即可,比如 NULL,VARCHAR 或 OTHER. 默认为OTHER.-->
        <setting name="jdbcTypeForNull" value="OTHER"/>

        <!-- 指定哪个对象的方法触发一次延迟加载。默认为equals,clone,hashCode,toString. -->
        <setting name="lazyLoadTriggerMethods" value="equals,clone,hashCode,toString"/>
    </settings>


    <typeAliases>
        <package name="com.mucfc.taskcenter.vo"/>
        <!-- 为此包下的所有类自动定义别名-->
    </typeAliases>

    <plugins>
        <!-- 分页查询拦截器 -->
        <plugin interceptor="com.github.walker.mybatis.paginator.OffsetLimitInterceptor">
            <property name="dialectClass" value="com.github.walker.mybatis.paginator.dialect.MySQLDialect"/>
        </plugin>
    </plugins>

</configuration>